{"ast":null,"code":"import axios from \"axios\";\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\nexport const getWeatherByCity = async city => {\n  const geoRes = await axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`);\n  if (!geoRes.data.length) throw new Error(\"Город не найден\");\n  const {\n    lat,\n    lon\n  } = geoRes.data[0];\n  const weatherRes = await axios.get(`${BASE_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}&lang=ru`);\n  return weatherRes.data;\n};","map":{"version":3,"names":["axios","API_KEY","process","env","REACT_APP_WEATHER_API_KEY","BASE_URL","getWeatherByCity","city","geoRes","get","data","length","Error","lat","lon","weatherRes"],"sources":["C:/Users/Кирилл/Desktop/DZ6UZOLNIKOV/src/services/weatherService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\r\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\r\n\r\nexport const getWeatherByCity = async (city) => {\r\n    const geoRes = await axios.get(`https://api.openweathermap.org/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`);\r\n    if (!geoRes.data.length) throw new Error(\"Город не найден\");\r\n\r\n    const { lat, lon } = geoRes.data[0];\r\n    const weatherRes = await axios.get(`${BASE_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}&lang=ru`);\r\n\r\n    return weatherRes.data;\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;AACrD,MAAMC,QAAQ,GAAG,yCAAyC;AAE1D,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EAC5C,MAAMC,MAAM,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mDAAmDF,IAAI,kBAAkBN,OAAO,EAAE,CAAC;EAClH,IAAI,CAACO,MAAM,CAACE,IAAI,CAACC,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EAE3D,MAAM;IAAEC,GAAG;IAAEC;EAAI,CAAC,GAAGN,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC;EACnC,MAAMK,UAAU,GAAG,MAAMf,KAAK,CAACS,GAAG,CAAC,GAAGJ,QAAQ,iBAAiBQ,GAAG,QAAQC,GAAG,uBAAuBb,OAAO,UAAU,CAAC;EAEtH,OAAOc,UAAU,CAACL,IAAI;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}