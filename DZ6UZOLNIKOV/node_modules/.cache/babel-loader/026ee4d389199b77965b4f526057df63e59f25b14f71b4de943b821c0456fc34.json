{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0438\\u0440\\u0438\\u043B\\u043B\\\\Desktop\\\\DZ6UZOLNIKOV\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport CitySelector from \"./components/CitySelector\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport { getWeatherByCity } from \"./services/weatherService\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Новосибирск\");\n  useEffect(() => {\n    fetchWeather(city);\n  }, [city]);\n  const fetchWeather = async city => {\n    try {\n      const data = await getWeatherByCity(city);\n      setWeatherData(data);\n    } catch (error) {\n      console.error(\"Ошибка загрузки погоды:\", error);\n    }\n  };\n  const getBackgroundClass = () => {\n    if (!weatherData) return \"default\";\n    return weatherData.list[0].weather[0].main.toLowerCase();\n  };\n  const getTextColorClass = () => {\n    if (!weatherData) return \"light-text\";\n    const weatherCondition = weatherData.list[0].weather[0].main.toLowerCase();\n    const lightBackgrounds = [\"snow\", \"mist\", \"clouds\"];\n    return lightBackgrounds.includes(weatherCondition) ? \"dark-text\" : \"light-text\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${getBackgroundClass()}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${getTextColorClass()}`,\n      children: [/*#__PURE__*/_jsxDEV(CitySelector, {\n        onCitySelect: setCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [Math.round(weatherData.list[0].main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${weatherData.list[0].weather[0].icon}.png`,\n            alt: \"weather icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast\",\n          children: weatherData.list.filter((_, index) => index % 8 === 0).slice(0, 5).map((w, index) => /*#__PURE__*/_jsxDEV(WeatherCard, {\n            day: new Date(w.dt_txt).toLocaleString(\"ru-RU\", {\n              weekday: \"long\"\n            }),\n            temp: w.main.temp,\n            icon: w.weather[0].icon\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Dg3ko9eqD17yeqspGwBIrVFu6Vs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CitySelector","WeatherCard","getWeatherByCity","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","city","setCity","fetchWeather","data","error","console","getBackgroundClass","list","weather","main","toLowerCase","getTextColorClass","weatherCondition","lightBackgrounds","includes","className","children","onCitySelect","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","temp","src","icon","alt","filter","_","index","slice","map","w","day","Date","dt_txt","toLocaleString","weekday","_c","$RefreshReg$"],"sources":["C:/Users/Кирилл/Desktop/DZ6UZOLNIKOV/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport CitySelector from \"./components/CitySelector\";\r\nimport WeatherCard from \"./components/WeatherCard\";\r\nimport { getWeatherByCity } from \"./services/weatherService\";\r\nimport \"./styles/App.css\";\r\n\r\nconst App = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [city, setCity] = useState(\"Новосибирск\");\r\n\r\n  useEffect(() => {\r\n    fetchWeather(city);\r\n  }, [city]);\r\n\r\n  const fetchWeather = async (city) => {\r\n    try {\r\n      const data = await getWeatherByCity(city);\r\n      setWeatherData(data);\r\n    } catch (error) {\r\n      console.error(\"Ошибка загрузки погоды:\", error);\r\n    }\r\n  };\r\n\r\n  const getBackgroundClass = () => {\r\n    if (!weatherData) return \"default\";\r\n    return weatherData.list[0].weather[0].main.toLowerCase();\r\n  };\r\n\r\n  const getTextColorClass = () => {\r\n    if (!weatherData) return \"light-text\";\r\n    const weatherCondition = weatherData.list[0].weather[0].main.toLowerCase();\r\n    const lightBackgrounds = [\"snow\", \"mist\", \"clouds\"];\r\n\r\n    return lightBackgrounds.includes(weatherCondition) ? \"dark-text\" : \"light-text\";\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${getBackgroundClass()}`}>\r\n      <div className={`container ${getTextColorClass()}`}>\r\n        <CitySelector onCitySelect={setCity} />\r\n        {weatherData && (\r\n          <>\r\n            <h1>{city}</h1>\r\n            <div className=\"current-weather\">\r\n              <h2>{Math.round(weatherData.list[0].main.temp)}°C</h2>\r\n              <img\r\n                src={`https://openweathermap.org/img/wn/${weatherData.list[0].weather[0].icon}.png`}\r\n                alt=\"weather icon\"\r\n              />\r\n            </div>\r\n            <div className=\"forecast\">\r\n              {weatherData.list\r\n                .filter((_, index) => index % 8 === 0)\r\n                .slice(0, 5)\r\n                .map((w, index) => (\r\n                  <WeatherCard\r\n                    key={index}\r\n                    day={new Date(w.dt_txt).toLocaleString(\"ru-RU\", { weekday: \"long\" })}\r\n                    temp={w.main.temp}\r\n                    icon={w.weather[0].icon}\r\n                  />\r\n                ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}